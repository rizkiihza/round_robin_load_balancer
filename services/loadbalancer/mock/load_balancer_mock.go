// Code generated by MockGen. DO NOT EDIT.
// Source: services/loadbalancer/load_balancer.go

// Package mock_loadbalancer is a generated GoMock package.
package mock_loadbalancer

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoadBalancer is a mock of LoadBalancer interface.
type MockLoadBalancer struct {
	ctrl     *gomock.Controller
	recorder *MockLoadBalancerMockRecorder
}

// MockLoadBalancerMockRecorder is the mock recorder for MockLoadBalancer.
type MockLoadBalancerMockRecorder struct {
	mock *MockLoadBalancer
}

// NewMockLoadBalancer creates a new mock instance.
func NewMockLoadBalancer(ctrl *gomock.Controller) *MockLoadBalancer {
	mock := &MockLoadBalancer{ctrl: ctrl}
	mock.recorder = &MockLoadBalancerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoadBalancer) EXPECT() *MockLoadBalancerMockRecorder {
	return m.recorder
}

// GetNextServiceKey mocks base method.
func (m *MockLoadBalancer) GetNextServiceKey(healthyServiceKeys []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextServiceKey", healthyServiceKeys)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNextServiceKey indicates an expected call of GetNextServiceKey.
func (mr *MockLoadBalancerMockRecorder) GetNextServiceKey(healthyServiceKeys interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextServiceKey", reflect.TypeOf((*MockLoadBalancer)(nil).GetNextServiceKey), healthyServiceKeys)
}
